
services:
  web:
    build: ./app
    command: python server.py
    volumes:
      - ./app/log:/app/log
    depends_on:
      - db
    networks:
      - cybernet

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: t2
    command: --general-log=1 --general-log-file=/var/lib/mysql/query.log
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    networks:
      - cybernet

  snort:
    build: ./snort
    cap_add:
      - NET_ADMIN
      - NET_RAW
    # acesso a todas as portas do pc, mesmo fora do container
    network_mode: "host"
    volumes:
      - ./snort/log:/var/log/snort
    command: snort -i eth0 -A full -k none -l /var/log/snort -c /etc/snort/snort.conf

  sniffer:
    build: ./sniffer
    command: tcpdump -i eth0 -w /captures/traffic.pcap
    volumes:
      - captures_data:/captures
    networks:
      - cybernet
    depends_on:
      - web

  monitoramento:
    build: ./monitoramento
    command: python3 watch.py
    depends_on:
      - web
      - snort
    volumes:
      - ./app/log:/app/log                   # Logs da App
      - ./snort/log:/var/log/snort           # Logs do Snort
      - mysql_data:/var/lib/mysql            # Volume do DB
      - captures_data:/captures              # Volume do Sniffer
      - ./monitoramento/logs:/monitoramento  # Logs do pr√≥prio monitor
    networks:
      - cybernet

  firewall:
    image: nginx:1.25-alpine
    ports:
      - "5000:80"
    volumes:
      - ./firewall/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - cybernet
    depends_on:
      - web

  sqli_tester:
    build: ./test
    networks:
      - cybernet
    depends_on:
      - web
      - firewall

networks:
  cybernet:
    driver: bridge

volumes:
  mysql_data:
  captures_data: 
